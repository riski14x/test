#!/bin/bash
######################################
MYIP=$(curl -sS ipv4.icanhazip.com)
######################################
IPVPS=$(curl -s ipv4.icanhazip.com)
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
echo ""
clear
######################################
# // INSTALL UDP CUSTOM
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
######################################
green="\033[1;32m"
red="\033[1;31m"
# // Gettings Info

domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
######################################
# // USERNAME IZIN IPP
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/arsy14x/vip/master/izin | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/arsy14x/vip/master/izin | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e
######################################
# // DETAIL ORDER IZIN IP
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
######################################
clear
# // DAYS LEFT
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
######################################
# // VPS INFORMATION
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""
######################################
# // AKTIVATED & EXPIRED
Info="\033[92mACTIVED\033[0m"
Eror="\033[91mEXPIRED\033[0m"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS https://raw.githubusercontent.com/arsy14x/vip/master/izin | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Eror}"
fi
######################################
echo -e "\e[32mloading...\e[0m"
clear
######################################
# // GETTINGS SYSTEM
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

clear

######################################
# // RUNNING SSH
######################################
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${green}[ON]${NC}"
else
   status_ssh="${red}[OFF]${NC} "
fi
######################################
# // RUNNING WEBSOCKET
######################################
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}[ON]${NC}"
else
    status_ws_epro="${red}[OFF]${NC} "
fi
######################################
# RUNNING HAPROXY
######################################
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}[ON]${NC}"
else
   status_haproxy="${red}[OFF]${NC} "
fi
######################################
# RUNNING XRAY
######################################
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}[ON]${NC}"
else
   status_xray="${red}[OFF]${NC} "
fi
######################################
# RUNNING NGINX
######################################
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}[ON]${NC}"
else
   status_nginx="${red}[OFF]${NC} "
fi
######################################
# RUNNING DROPBEAR
######################################
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}[ON]${NC}"
else
   status_dropbear="${red}[OFF]${NC} "
fi

######################################

# // UPDATE / REVISI all menu
REVISI="https://raw.githubusercontent.com/AngIMAN/v4/main/"

######################################

# \\ Vless account //
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
# \\ Vmess account //
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
# \\ Trojan account //
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(grep -c -E "^#!# " "/etc/xray/config.json")
let ssa=$ssx/2

#####################################

# // ----->>> BACKGROUND

BG_GRN="\033[42;1m" # BG HIJAU
BG_RED="\033[45;1m" # BG MERAH
BG_CYN="\033[46;1m" # BG CYANN
BG_BLU="\033[44;1m" # BG BIRU
BG_PUR="\033[43;1m" # BG KUNING
BG_WHT="\033[47;1m" # BG PUTIH

GREN="\033[92m"
# // ----->>> COLOR VALIDATIONS

WHITE="\033[1;37m"
CYAN="\033[96;1m"
BLUE="\033[4;34m"
RED='\033[0;31m'
NC='\033[0m'
# // ----->>> COLOR VALIDATIONS
echo -e " "
echo -e " ${CYAN}┌──────────────────────────────────────────────────────────┐${NC}"
echo -e " ${CYAN}│$NC\033[45;96;1m                        VPN XPRESS                        $NC${CYAN}│$NC"
echo -e " ${CYAN}└──────────────────────────────────────────────────────────┘${NC}"
echo -e " ${CYAN}┌──────────────────────────────────────────────────────────┐${NC}"
echo -e " ${WHITE}   NGINX$NC: $status_nginx ${WHITE}WS-EPRO$NC: $status_ws_epro ${WHITE}DROPBEAR$NC: $status_dropbear ${WHITE}HAPROXY$NC: $status_haproxy   $NC${WHITE}$NC"
echo -e " ${CYAN}└──────────────────────────────────────────────────────────┘${NC}"
echo -e " ${CYAN}┌──────────────────────────────────────────────────────────┐${NC}"
echo -e " ${CYAN}│$NC • $NC${WHITE} System OS ${NC}     ${RED}=$NC $MODEL${NC}"
echo -e " ${CYAN}│$NC • $NC${WHITE} Core Cpu ${NC}      ${RED}=$NC $CORE${NC}"
echo -e " ${CYAN}│$NC • $NC${WHITE} Server RAM ${NC}    ${RED}=$NC $uram/$RAM MB $NC"
echo -e " ${CYAN}│$NC • $NC${WHITE} City ${NC}          ${RED}=$NC $CITY${NC}"
echo -e " ${CYAN}│$NC • $NC${WHITE} Cpu Usage ${NC}     ${RED}=$NC $cpu_usage${NC}"
echo -e " ${CYAN}│$NC • $NC${CYAN} Domain         ${CYAN}= $domain${NC}"
echo -e " ${CYAN}│$NC • $NC${CYAN} IP VPS         ${CYAN}= $IPVPS${NC}"
echo -e " ${CYAN}│$NC • $NC${CYAN} ISP            ${CYAN}= $ISP${NC}"
echo -e " ${CYAN}│$NC • $NC${GREN} DEV            ${GREN}= vpnEXPRES (aiman)${NC}"
echo -e " ${CYAN}│$NC • $NC${GREN} W A            ${GREN}= 628981874211${NC}"
echo -e " ${CYAN}└──────────────────────────────────────────────────────────┘${NC}"
echo -e " ${WHITE}       SSH: $ssh1 TROJAN : $trb SS-R : $ssa VLESS : $vla VMESS : $vma ${NC}"
echo -e " ${CYAN}        ┌──────────────────────────────────────────┐${NC}"
echo -e " ${CYAN}        │$NC${RED} Status Script $NC     ${RED}=$NC ${sts}"
echo -e " ${CYAN}        │$NC${RED} Client/Regist $NC     ${RED}=$NC $username "
echo -e " ${CYAN}        │$NC${RED} Exp.Script $NC        ${RED}=$NC $exp / $certifacate Days$NC "
echo -e " ${CYAN}        └──────────────────────────────────────────┘${NC}"
echo -e " ${CYAN}               ─────────────────────────────── " | lolcat
echo -e " ${CYAN}     ┌──────────────────────────────────────────────────┐${NC}"
echo -e " ${CYAN}      $NC ${BLUE}1.)${NC} ${WHITE}SSH / OPENVPN      ${NC}${CYAN} ${NC}    ${BLUE}6.)${NC} ${WHITE}BACKUP / RESTORE ${NC}${CYAN} $NC" 
echo -e " ${CYAN}     │$NC ${BLUE}2.)${NC} ${WHITE}VMESS / XRAY       ${NC}${CYAN}│${NC}    ${BLUE}7.)${NC} ${WHITE}BOT TELEGRAM    ${NC}${CYAN} │$NC"    
echo -e " ${CYAN}      $NC ${BLUE}3.)${NC} ${WHITE}VLESS / XRAY       ${NC}${CYAN} ${NC}    ${BLUE}8.)${NC} ${WHITE}UPDATE SCRIPT  ${NC}${CYAN} $NC"  
echo -e " ${CYAN}     │$NC ${BLUE}4.)${NC} ${WHITE}TROJAN / XRAY      ${NC}${CYAN}│${NC}    ${BLUE}9.)${NC} ${WHITE}FEATURES        ${NC}${CYAN} │$NC"
echo -e " ${CYAN}      $NC ${BLUE}5.)${NC} ${WHITE}SS-R Libev         ${NC}${CYAN} ${NC}    ${BLUE}x.)${NC} ${RED}EXIT             ${NC}${CYAN}   $NC"
echo -e " ${CYAN}     └──────────────────────────────────────────────────┘${NC}"
echo -e " "
read -p " Select Options [ 1 / 9 or x ] >>   " wZtXtQ
case $wZtXtQ in
1)
clear
m-sshws
;;
2)
clear
m-vmess
;;
3)
clear
m-vless
;;
4)
clear
m-trojan
;;
5)
clear
m-ssws
;;
6)
clear
menu-backup
;;
7)
clear
add-bot-panel
;;
8)
clear
wget ${REVISI}files/update.sh && chmod +x update.sh && ./update.sh
;;
9)
clear
features
;;
*)
clear
exit
;;
esac
